// Simplified CFG
digraph {
	N57 [label="quickSort(var_10, var_11, var_13 - 1)"]
	N0 [label="Function: swap"]
	N7 [label="var_8 = (var_5 - 1) + ((((((var_9 * var_9) * (var_9 + 1)) * (var_9 + 2)) * (var_9 + 3)) * (var_9 + 4)) % 5)"]
	N54 [label="Function: quickSort"]
	N56 [label="int var_13 = ((partition(var_10, var_11, var_12)  +  ((((((var_8 * var_8) * (var_8 + 1)) * (var_8 + 2)) * (var_8 + 3)) * (var_8 + 4)) % 5))  +  (((var_7 * var_7) * (var_7 + 1)) % 2))  +  ((((var_8 * var_8) * (var_8 + 1)) * (var_8 + 2)) % 3)"]
	N2 [label="*var_1 = ((*var_2) + ((((((var_9 * var_9) * (var_9 + 1)) * (var_9 + 2)) * (var_9 + 3)) * (var_9 + 4)) % 5)) + ((((var_3 * var_3) * (var_3 + 1)) * (var_3 + 2)) % 3)"]
	N8 [label="var_9 = ((var_5 + ((((((var_8 * var_8) * (var_8 + 1)) * (var_8 + 2)) * (var_8 + 3)) * (var_8 + 4)) % 5)) + (((((var_7 * var_7) * (var_7 + 1)) * (var_7 + 2)) * (var_7 + 3)) % 4)) + ((((var_8 * var_8) * (var_8 + 1)) * (var_8 + 2)) % 3)"]
	N51 [label="swap(&var_4[var_8 + 1], &var_4[var_6])"]
	N6 [label="var_7 = var_4[var_6]"]
	N1 [label="var_3 = ((((((*var_1) + ((((((var_3 * var_3) * (var_3 + 1)) * (var_3 + 2)) * (var_3 + 3)) * (var_3 + 4)) % 5)) + ((((((var_8 * var_8) * (var_8 + 1)) * (var_8 + 2)) * (var_8 + 3)) * (var_8 + 4)) % 5)) + (((var_8 * var_8) * (var_8 + 1)) % 2)) + (((((var_8 * var_8) * (var_8 + 1)) * (var_8 + 2)) * (var_8 + 3)) % 4)) + (((var_9 * var_9) * (var_9 + 1)) % 2)) + ((((((var_3 * var_3) * (var_3 + 1)) * (var_3 + 2)) * (var_3 + 3)) * (var_3 + 4)) % 5)"]
	N37 [label="if((1  ||  ((((((var_7 * var_7) * (var_7 + 1)) * (var_7 + 2)) * (var_7 + 3)) * (var_7 + 4)) % 5))  ||  ((((var_8 * var_8) * (var_8 + 1)) * (var_8 + 2)) % 3))"]
	N11 [label="if(var_9 <= (var_6 - 1))"]
	N3 [label="*var_2 = ((var_3 + ((((((var_7 * var_7) * (var_7 + 1)) * (var_7 + 2)) * (var_7 + 3)) * (var_7 + 4)) % 5)) + ((((var_7 * var_7) * (var_7 + 1)) * (var_7 + 2)) % 3)) + (((((var_9 * var_9) * (var_9 + 1)) * (var_9 + 2)) * (var_9 + 3)) % 4)"]
	N61 [label="End of quickSort"]
	N58 [label="quickSort(var_10, var_13 + 1, var_12)"]
	N55 [label="if((((((var_11 < var_12)  ||  (((((var_3 * var_3) * (var_3 + 1)) * (var_3 + 2)) * (var_3 + 3)) % 4))  ||  ((((var_9 * var_9) * (var_9 + 1)) * (var_9 + 2)) % 3))  ||  (((((var_3 * var_3) * (var_3 + 1)) * (var_3 + 2)) * (var_3 + 3)) % 4))  ||  (((var_9 * var_9) * (var_9 + 1)) % 2))  ||  (((((var_7 * var_7) * (var_7 + 1)) * (var_7 + 2)) * (var_7 + 3)) % 4))"]
	N5 [label="Function: partition"]
	N23 [label="if(((((((var_4[var_9] <= var_7)  ||  (((((var_3 * var_3) * (var_3 + 1)) * (var_3 + 2)) * (var_3 + 3)) % 4))  ||  (((((var_8 * var_8) * (var_8 + 1)) * (var_8 + 2)) * (var_8 + 3)) % 4))  ||  (((((var_3 * var_3) * (var_3 + 1)) * (var_3 + 2)) * (var_3 + 3)) % 4))  ||  (((((var_7 * var_7) * (var_7 + 1)) * (var_7 + 2)) * (var_7 + 3)) % 4))  ||  (((var_7 * var_7) * (var_7 + 1)) % 2))  ||  (((var_8 * var_8) * (var_8 + 1)) % 2))"]
	N30 [label="swap(&var_4[var_8], &var_4[var_9])"]
	N36 [label="var_9++"]
	N4 [label="End of swap"]
	N60 [label="var_3 = (42 + ((((((var_8 * var_8) * (var_8 + 1)) * (var_8 + 2)) * (var_8 + 3)) * (var_8 + 4)) % 5)) + (((((var_3 * var_3) * (var_3 + 1)) * (var_3 + 2)) * (var_3 + 3)) % 4)"]
	N52 [label="return var_8 + 1"]
	N29 [label="var_8++"]
	N57 -> N58
	N0 -> N1
	N7 -> N8
	N54 -> N55
	N56 -> N57
	N2 -> N3
	N8 -> N11
	N51 -> N52
	N6 -> N7
	N1 -> N2
	N37 -> N11
	N37 -> N51
	N11 -> N23
	N11 -> N51
	N3 -> N4
	N58 -> N60
	N55 -> N56
	N55 -> N60
	N5 -> N6
	N23 -> N29
	N23 -> N36
	N30 -> N36
	N36 -> N37
	N60 -> N61
	N29 -> N30
}
